<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4026.6">
  <POU Name="FB_MoveModulo_Test" Id="{7786fbc4-8503-421f-8f00-a46b30c3f992}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_MoveModulo_Test EXTENDS TcUnit.FB_TestSuite

VAR
	fbTestAxis : FB_Axis;
	stAxisParameter : ST_AxisParameter := (Acceleration := 1000, Deceleration := 1000, Jerk := 2000, Velocity := 1000);

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[MoveModulo100_posDir();
MoveModulo1000_negDir();
MoveModulo150_Shortestway();

//현재 위치보다 작은 각도를 목표로 움직이고 target pos이 360를 넘으면 한바퀴 더 돌게됨]]></ST>
    </Implementation>
    <Method Name="MoveModulo100_posDir" Id="{afba450c-8772-4d2b-b379-89ba12f00c9f}">
      <Declaration><![CDATA[METHOD MoveModulo100_posDir
VAR_INST
	step: INT;
	
	fbTon : TON := (PT:= T#10s);
	EXPECTED_RESULT : INT := 20;
END_VAR
 ]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF TEST_ORDERED('MoveAbsolute100') THEN
		
	fbTestAxis.CyclicLogic();
	CASE step OF
		0:
			fbTestAxis.stAxisParameter := stAxisParameter;
			fbTestAxis.Enable();
			IF fbTestAxis.Enabled THEN
				step := 10;
			END_IF
		10:
			IF fbTestAxis.MoveModulo(100, MC_Direction.MC_Positive_Direction, FALSE) = TRUE THEN
				step := 11;
			END_IF
			
		11:
			IF NOT fbTestAxis.Busy AND fbTestAxis.InPosition THEN
				step := 20;
			END_IF
		
		20: //Done
		
	
	END_CASE
	fbTestAxis.CyclicLogic();
	
	
	fbTon(IN := TRUE);
	IF fbTon.Q OR step = 20 THEN
		AssertEquals(Expected := EXPECTED_RESULT, Actual := step , Message := 'MoveModulo100 didnt work');
		TEST_FINISHED();
	END_IF
END_IF

		
	
]]></ST>
      </Implementation>
    </Method>
    <Method Name="MoveModulo1000_negDir" Id="{3fe1db6d-6042-4aad-b9ad-db4d96b9bd23}">
      <Declaration><![CDATA[METHOD MoveModulo1000_negDir
VAR_INST
	step: INT;
	
	fbTon : TON := (PT:= T#10s);
	EXPECTED_RESULT : int := 20;
END_VAR
 ]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF TEST_ORDERED('MoveAbsolute1000_negDir') THEN
		
	fbTestAxis.CyclicLogic();
	CASE step OF
		0:
			fbTestAxis.stAxisParameter := stAxisParameter;
			fbTestAxis.Enable();
			IF fbTestAxis.Enabled THEN
				step := 10;
			END_IF
		10:
			IF fbTestAxis.MoveModulo(1000, MC_Direction.MC_Negative_Direction, FALSE) = TRUE THEN
				step := 11;
			END_IF
			
		11:
			IF NOT fbTestAxis.Busy AND fbTestAxis.InPosition THEN
				step := 20;
			END_IF
		20: //Done
	END_CASE
	
	fbTestAxis.CyclicLogic();
	
	
	fbTon(IN := TRUE);
	IF fbTon.Q OR step = 20 THEN
		AssertEquals(Expected := EXPECTED_RESULT, Actual := step, Message := 'MoveAbsolute1000_negDir');
		TEST_FINISHED();
	END_IF
END_IF

	
	
]]></ST>
      </Implementation>
    </Method>
    <Method Name="MoveModulo150_Shortestway" Id="{b634cf28-5534-4da7-917b-3b6c909e420f}">
      <Declaration><![CDATA[METHOD MoveModulo150_Shortestway
VAR_INST
	step: INT;
	
	fbTon : TON := (PT:= T#10s);
	EXPECTED_RESULT : INT := 20;
END_VAR
 ]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF TEST_ORDERED('MoveModulo150') THEN
		
	
	fbTestAxis.CyclicLogic();
	CASE step OF
		0:
			fbTestAxis.stAxisParameter := stAxisParameter;
			fbTestAxis.Enable();
			IF fbTestAxis.Enabled THEN
				step := 10;
			END_IF
		10:
			IF fbTestAxis.MoveModulo(150,MC_Direction.MC_Shortest_Way,FALSE) = TRUE THEN
				step := 11;
			END_IF
			
		11:
			IF NOT fbTestAxis.Busy AND fbTestAxis.InPosition THEN
				step := 20;
			END_IF
		20: //Done
	END_CASE
	
	fbTestAxis.CyclicLogic();
	
	
	fbTon(IN := TRUE);
	IF fbTon.Q OR step = 20 THEN
		AssertEquals(Expected := EXPECTED_RESULT, Actual := step, Message := 'MoveModulo150_shortest way didnt work');
		TEST_FINISHED();
	END_IF
END_IF
	
	
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>