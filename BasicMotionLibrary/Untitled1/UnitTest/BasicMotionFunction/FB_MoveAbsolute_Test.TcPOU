<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4026.6">
  <POU Name="FB_MoveAbsolute_Test" Id="{572168b8-32ca-4f93-a8e0-68623b7ff107}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_MoveAbsolute_Test EXTENDS TcUnit.FB_TestSuite

VAR
	fbTestAxis : FB_Axis;
	stAxisParameter : ST_AxisParameter := (Acceleration := 1000, Deceleration := 1000, Jerk := 2000, Velocity := 1000);

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[MoveAbsolute1000();
MoveAbsolute100();
MoveAbsolute1000_negDir();]]></ST>
    </Implementation>
    <Method Name="MoveAbsolute100" Id="{aa84a8a8-f3bb-4f2e-99f7-dc0d6a2aed00}">
      <Declaration><![CDATA[METHOD MoveAbsolute100
VAR_INST
	step: INT;
	
	fbTon : TON := (PT:= T#10s);
	EXPECTED_RESULT : INT := 20;
END_VAR
 ]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF TEST_ORDERED('MoveAbsolute100') THEN
		
	fbTestAxis.CyclicLogic();
	CASE step OF
		0:
			fbTestAxis.stAxisParameter := stAxisParameter;
			fbTestAxis.Enable();
			IF fbTestAxis.Enabled THEN
				step := 10;
			END_IF
		10:
			IF fbTestAxis.MoveAbsolute(100,FALSE) = TRUE THEN
				step := 11;
			END_IF
			
		11:
			IF NOT fbTestAxis.Busy AND fbTestAxis.InPosition THEN
				step := 20;
			END_IF
		
		20: //Done
		
	
	END_CASE
	fbTestAxis.CyclicLogic();
	
	
	fbTon(IN := TRUE);
	IF fbTon.Q OR step = 20 THEN
		AssertEquals(Expected := EXPECTED_RESULT, Actual := step, Message := 'MoveAbsolute100 didnt work');
		TEST_FINISHED();
	END_IF
END_IF

		
	
]]></ST>
      </Implementation>
    </Method>
    <Method Name="MoveAbsolute1000" Id="{e03493c9-3c2c-44ea-99c2-cb462002cd75}">
      <Declaration><![CDATA[METHOD MoveAbsolute1000
VAR_INST
	step: INT;
	
	fbTon : TON := (PT:= T#10s);
	EXPECTED_RESULT : INT := 20;
END_VAR
 ]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF TEST_ORDERED('MoveAbsolute1000') THEN
		
	
	fbTestAxis.CyclicLogic();
	CASE step OF
		0:
			fbTestAxis.stAxisParameter := stAxisParameter;
			fbTestAxis.Enable();
			IF fbTestAxis.Enabled THEN
				step := 10;
			END_IF
		10:
			IF fbTestAxis.MoveAbsolute(1000,FALSE) = TRUE THEN
				step := 11;
			END_IF
			
		11:
			IF NOT fbTestAxis.Busy AND fbTestAxis.InPosition THEN
				step := 20;
			END_IF
		20: //Done
	END_CASE
	
	fbTestAxis.CyclicLogic();
	
	
	fbTon(IN := TRUE);
	IF fbTon.Q OR step = 20 THEN
		AssertEquals(Expected := EXPECTED_RESULT, Actual := step, Message := 'MoveAbsolute1000 didnt work');
		TEST_FINISHED();
	END_IF
END_IF
	
	
]]></ST>
      </Implementation>
    </Method>
    <Method Name="MoveAbsolute1000_negDir" Id="{e808cb15-9d2a-4e38-a844-2522d839f6a0}">
      <Declaration><![CDATA[METHOD MoveAbsolute1000_negDir
VAR_INST
	step: INT;
	
	fbTon : TON := (PT:= T#10s);
	EXPECTED_RESULT : INT := 20;
END_VAR
 ]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF TEST_ORDERED('MoveAbsolute1000_negDir') THEN
		
	fbTestAxis.CyclicLogic();
	CASE step OF
		0:
			fbTestAxis.stAxisParameter := stAxisParameter;
			fbTestAxis.Enable();
			IF fbTestAxis.Enabled THEN
				step := 10;
			END_IF
		10:
			IF fbTestAxis.MoveAbsolute(-1000,FALSE) = TRUE THEN
				step := 11;
			END_IF
			
		11:
			IF NOT fbTestAxis.Busy AND fbTestAxis.InPosition THEN
				step := 20;
			END_IF
		20: //Done
	END_CASE
	
	fbTestAxis.CyclicLogic();
	
	
	fbTon(IN := TRUE);
	IF fbTon.Q OR step = 20 THEN
		AssertEquals(Expected := EXPECTED_RESULT, Actual := step, Message := 'MoveAbsolute1000_negDir');
		TEST_FINISHED();
	END_IF
END_IF

	
	
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>